# Configuration

# -------- Directories --------
# Enumerates the directories to the files needed for the large scale detection
# Directories :
# - path/to/source/images : the path to the source images
# - path/to/topo : the path to the BDTOPO
# - path/to/communes : the path to the geographic information of the communes, used in the
#                      postprocessing step.
# - path/to/model : the path to the model that will be used for detection.
#
# Custom directories
# - temp : the name of the directory that stores the intermediary outputs
# - aux : the directory that contains auxiliary files (e.g. buildings)
# 
# - data : the name of the directory in which the final output (.geojson file)
#            are stored
# - carbon_dir : the path where the records of the energy consumption when 
#                running the pipeline are stored

source_images_dir :
model_dir :

source_commune_dir : 
source_topo_dir : 

temp_dir : 'temp'
aux_dir: 'aux'
outputs_dir : 'data'
carbon_dir : 'data'

# -------- Parameters --------
# Parameters for the main pipeline script 
# - run_xx.py : True if one want to run specific parts of the pipeline, False otherwise.

run_classification : True
run_segmentation : True
run_aggregation : True

# Parameters that are common to certain pipelines:
# Patch_size : used in the pre processing and the detection steps.
# - departement_number : the departement number, used in the postprocessing and main script.

patch_size : 299
device : 'cuda'
    
# Parameters that are specific to certain pipelines

# Preprocessing
# tiles_list : the list of tiles to proceed. By default it is set to None, but it is edited in the 
# tutorial to speed-up the execution of the tutorial
tiles_list : 


# Classification
# - device : the device to use. If None, the device is automatically set up
# - cls_batch_size : the batch_size
# - cls_threshold : the value of the thresold. Should be deliberatily low because false
#               positives (that are not located on buildings) are filtered out
# - cls_model : the name of the model to look for in the folder.

cls_batch_size : 512
cls_threshold : 0.4
cls_model : 'model_bdappv_cls'

# Segmentation
# - seg_batch_size : the size of the segmentation batch size
# - seg_threshold : the threshold chosen for segmentation. Should be 
#                            the value that maximizes performance in order to get
#                            masks that are as accurate as possible
# - num_gpu : the number of GPU devices to use for inference
# - seg_model : the name of the model to look for in the folder.
#
seg_threshold : 0.46
num_gpu : 1
seg_batch_size : 64
seg_model : 'model_bdappv_seg'

# Aggregation : 
# - filter building : keep only the installations that are on a building
#
# Characteristics extraction methods:
# - tilt_method : 'random_forest' or 'lut' or 'constant'. See documentation for explanations
# - azimuth_method : 'hough'. See documentation for explanations
# - installed_capacity_method : "random_forest", "linear", "quadratic", "clustered_linear". See documentation for explanations
#
# - look_up_table_dir : the diectory where the look up table is located.
#
# - random_forest_tilt path to the weights of the RF model for the tilt
# - random_forest_ic path to the weights of the RF model for the installed capacity
#
# - constant_tilt : the value to input as a constant tilt
# - efficiency : the value to input as a constant coefficient for linear fit of the IC

filter_building : True

tilt_method : 'lut'
azimuth_method : 'hough'
installed_capacity_method : "clustered_linear"

look_up_table_dir : "../data/lut" 

random_forest_tilt : 'random_forest_tilt' 
rf_scaler_tilt : 'rf_scaler_tilt'

random_forest_ic : 'random_forest_ic'
rf_scaler_ic :  'rf_scaler_ic'

constant_tilt : 27.
efficiency : 0.13207496765309207
